# -*- coding: utf-8 -*-
"""iterators_generators.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1c1CRGYWZZrJmvguYJTyb13jFogDvx7dZ
"""

import random

#first i have my countdown class in which i
class Countdown:
    def __init__(self, start):
      #first i intialized the starting value
        self.start = start

    def __iter__(self):
        return self

            #generating the next number. if the number is less than 1, it will stop
    def __next__(self):
        if self.start < 1:
            raise StopIteration
        else:
            self.start -= 1
            return self.start + 1

def fibonacci_generator(limit):


          #next i have my function to generate finonnaci number
    a = 0
    b = 1

        #i have a while loop that while the number is less than the limit that  the user set, then keep on adding it to the previous number
    while a <= limit:
        yield a

        #and then turn a into b and b into the sum of a and b. so for example if a was first 0 and b was 1, then now a will become 1 and b will becom 0+1 = 1
        a = b
        b = a + b

def random_number_generator(start, end, count):
  #then i have a function which will generate random numbers between a range
    for _ in range(count):
        yield random.randint(start, end)

if __name__ == "__main__":

    #then in my main, i first asked user for input
    limit = int(input("Enter the limit for Fibonacci numbers: "))
    random_start = int(input("Enter the start of the random number range: "))
    random_end = int(input("Enter the end of the random number range: "))
    random_count = int(input("Enter the number of random numbers to generate: "))


    print("Countdown:")
    countdown_iterator = Countdown(5)
    for num in countdown_iterator:
        print(num)

          #printing the fibonacci numbers
    print("Fibonacci Numbers up to {}:".format(limit))
    fibonacci_numbers = fibonacci_generator(limit)
    print(list(fibonacci_numbers))

      #and the sequence of numbers
    print("\nRandom Numbers between {} and {}:".format(random_start, random_end))
    random_numbers = random_number_generator(random_start, random_end, random_count)
    print(list(random_numbers))